#!groovy
@Library("Infrastructure")
import uk.gov.hmcts.contino.Kubectl

String product = "cet"
String component = "frontend"

withPipeline("nodejs", product, component) {
    after('build') {
        sh 'yarn setup'
    }

    //if (env.CHANGE_TITLE && !env.CHANGE_TITLE.startsWith('[PREVIEW]')) {
    enableDockerBuild()
    enableDeployToAKS()
//  }

    after('aksdeploy') {
        def subscription = env.SUBSCRIPTION_NAME
        def aksServiceName = "${product}-${component}-${env.BRANCH_NAME}".toLowerCase()
        def aksDomain = "${(env.SUBSCRIPTION_NAME in ['nonprod', 'prod']) ? 'service.core-compute-preview.internal' : 'service.core-compute-saat.internal'}"

        def kubectl = new Kubectl(this, subscription, aksServiceName)

        def ingressIP = kubectl.getServiceLoadbalancerIP("traefik", "kube-system")

        registerConsulDns(subscription, "feature-toggle-api-${aksServiceName}", ingressIP)


        env.FEATURE_TOGGLES_API_URL = "https://feature-toggle-api-${aksServiceName}.${aksDomain}"
        echo "${env.FEATURE_TOGGLES_API_URL}"
    }


    enableSlackNotifications('#cet-pipeline')
    after('functionalTest:aat') {
        publishHTML target: [
                reportDir            : "output/",
                reportFiles          : "mochawesome.html",
                reportName           : "SAAT Functional Tests",
                alwaysLinkToLastBuild: true
        ]
    }
}
